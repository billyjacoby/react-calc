{"version":3,"sources":["components/Button.js","components/Calculator.js","App.js","index.js"],"names":["Button","type","onClick","label","active","className","Calculator","useState","curValue","setCurValue","clearState","setClearState","prevValue","setPrevValue","storedOp","setStoredOp","activeOp","setActiveOp","buttonHeight","setButtonHeight","setCurValueFunction","value","startOperation","operation","opType","parseFloat","completeOperation","min","max","defaultValue","onChange","e","console","log","target","newHeight","onSliderChange","style","undefined","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21948e54.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Button = ({ type, onClick = () => null, label, active = false }) => {\n  let className = type;\n  if (active) {\n    className = type + \" active\";\n  }\n  return (\n    <button className={className} onClick={onClick}>\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport \"./Calculator.css\";\nimport Button from \"./Button\";\n\nconst Calculator = () => {\n  const [curValue, setCurValue] = useState(0);\n  const [clearState, setClearState] = useState(\"AC\");\n  const [prevValue, setPrevValue] = useState();\n  const [storedOp, setStoredOp] = useState();\n  const [activeOp, setActiveOp] = useState();\n\n  const [buttonHeight, setButtonHeight] = useState(\"4rem\");\n\n  const setCurValueFunction = (value) => {\n    if (curValue === 0) {\n      if (typeof value === \"number\") {\n        setCurValue(value);\n        setClearState(\"C\");\n      } else if (value === \".\") {\n        setCurValue(\"0.\");\n        setClearState(\"C\");\n      }\n    } else {\n      // TODO: add use case for not clearing screen when there is s storedOp.\n      setCurValue(\"\" + curValue + value);\n      setClearState(\"C\");\n    }\n  };\n\n  const clearValue = () => {\n    if (clearState === \"AC\") {\n      setCurValue(0);\n      setPrevValue(undefined);\n      setActiveOp();\n      setStoredOp();\n    }\n    if (clearState === \"C\") {\n      setCurValue(0);\n      setClearState(\"AC\");\n    }\n  };\n\n  const startOperation = (operation, opType) => {\n    setActiveOp(opType);\n    setPrevValue(parseFloat(curValue));\n    setStoredOp(() => operation);\n    setCurValue(0);\n  };\n\n  const completeOperation = (operation) => {\n    setCurValue(operation(curValue));\n  };\n\n  const onSliderChange = (e) => {\n    console.log(e.target.value);\n    const newHeight = e.target.value + \"rem\";\n\n    setButtonHeight(newHeight);\n  };\n\n  const equalPressed = () => {\n    // TODO: Figure out how to only perform the last op on subsequent equals button presses\n    if (typeof storedOp === \"function\") {\n      setCurValue(storedOp(prevValue, curValue));\n      setPrevValue(curValue);\n      setActiveOp();\n    }\n  };\n  return (\n    <>\n      <div className=\"slider-container\">\n        <label>Adjust Size:</label>\n        <br />\n        <input\n          type=\"range\"\n          min=\"2\"\n          max=\"10\"\n          defaultValue=\"4\"\n          onChange={(e) => onSliderChange(e)}\n        />\n      </div>\n\n      <div className=\"wrapper\" style={{ \"--buttonHeight\": buttonHeight }}>\n        <div className=\"display\">\n          <span>{curValue}</span>\n        </div>\n        <div className=\"button-row\">\n          <Button\n            type=\"function\"\n            onClick={() => clearValue()}\n            label={clearState}\n          />\n          <Button\n            type=\"function\"\n            label=\"+/-\"\n            onClick={() => completeOperation((value) => value * -1)}\n          />\n          <Button\n            type=\"function\"\n            label=\"%\"\n            onClick={() => completeOperation((value) => value * 0.01)}\n          />\n          <Button\n            type=\"operation\"\n            active={activeOp === \"division\"}\n            onClick={() =>\n              startOperation(\n                (prevValue, value) => prevValue / value,\n                \"division\"\n              )\n            }\n            label=\"รท\"\n          />\n        </div>\n        <div className=\"button-row\">\n          <Button\n            type=\"number\"\n            onClick={() => setCurValueFunction(7)}\n            label=\"7\"\n          />\n          <Button\n            type=\"number\"\n            onClick={() => setCurValueFunction(8)}\n            label=\"8\"\n          />\n          <Button\n            type=\"number\"\n            onClick={() => setCurValueFunction(9)}\n            label=\"9\"\n          />\n          <Button\n            type=\"operation\"\n            active={activeOp === \"multiplication\"}\n            onClick={() =>\n              startOperation(\n                (prevValue, value) => prevValue * value,\n                \"multiplication\"\n              )\n            }\n            label=\"ร\"\n          />\n        </div>\n        <div className=\"button-row\">\n          <Button\n            type=\"number\"\n            onClick={() => setCurValueFunction(4)}\n            label=\"4\"\n          />\n          <Button\n            type=\"number\"\n            onClick={() => setCurValueFunction(5)}\n            label=\"5\"\n          />\n          <Button\n            type=\"number\"\n            onClick={() => setCurValueFunction(6)}\n            label=\"6\"\n          />\n          <Button\n            type=\"operation\"\n            active={activeOp === \"subtract\"}\n            onClick={() =>\n              startOperation(\n                (prevValue, value) => prevValue - value,\n                \"subtract\"\n              )\n            }\n            label=\"-\"\n          />\n        </div>\n        <div className=\"button-row\">\n          <Button\n            type=\"number\"\n            onClick={() => setCurValueFunction(1)}\n            label=\"1\"\n          />\n          <Button\n            type=\"number\"\n            onClick={() => setCurValueFunction(2)}\n            label=\"2\"\n          />\n          <Button\n            type=\"number\"\n            onClick={() => setCurValueFunction(3)}\n            label=\"3\"\n          />\n          <Button\n            type=\"operation\"\n            active={activeOp === \"addition\"}\n            onClick={() =>\n              startOperation(\n                (prevValue, value) => prevValue + value,\n                \"addition\"\n              )\n            }\n            label=\"+\"\n          />\n        </div>\n        <div className=\"button-row\">\n          <Button\n            type=\"number double bottom-left\"\n            onClick={() => setCurValueFunction(0)}\n            label=\"0\"\n          />\n          <Button\n            type=\"number\"\n            onClick={() => setCurValueFunction(\".\")}\n            label=\".\"\n          />\n          <Button\n            type=\"operation bottom-right\"\n            onClick={equalPressed}\n            label=\"=\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Calculator;\n","import \"./App.css\";\nimport Calculator from \"./components/Calculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>React Calculator</h1>\n        <Calculator />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}